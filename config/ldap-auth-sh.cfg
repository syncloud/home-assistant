#
# This can be used to authenticate to Home Assistant with the command_line
# auth provider introduced in version 0.88.
#
# The configuration.yaml entry might look as follows:
#
#     homeassistant:
#       auth_providers:
#       - type: command_line
#         command: /path/to/ldap-auth.sh
#         args: ["/path/to/this/config.cfg"]
#         # Uncomment and see below if you want the Home Assistant
#         # user to be populated with his full name.
#         #meta: true
#
# The settings for this configuration can be taken 1:1 from ldap-auth.sh.
# Just copy them over and adapt to your needs.
#

# curl is available in the official home-assistant docker image
CLIENT="curl"
#DEBUG=1

# Must be one of "curl" and "ldapsearch".
# NOTE:
# - When choosing "curl", make sure "curl --version | grep ldap" outputs
#   something. Otherwise, curl was compiled without LDAP support.
# - When choosing "ldapsearch", make sure the ldapwhoami command is
#   available as well, as that might be needed in some cases.
#CLIENT="curl"

# Usernames should be validated using a regular expression to be of
# a known format. Special characters will be escaped anyway, but it is
# generally not recommended to allow more than necessary.
# This pattern is set by default. In your config file, you can either
# overwrite it with a different one or use "unset USERNAME_PATTERN" to
# disable validation completely.
USERNAME_PATTERN='^[a-z|A-Z|0-9|_|-|.]+$'

# Adapt to your needs.
SERVER="ldap://localhost:389"
# Will try binding as this user.
# ldap_dn_escape escapes special characters in strings to make them
# usable within LDAP DN components.
USERDN="cn=$(ldap_dn_escape "$username"),ou=users,dc=syncloud,dc=org"

# If you want to take additional checks like requiring group memberships
# or fetch specific user attributes, you can execute a custom search, which
# has to return exactly one result in order for authentication to succeed.
# Uncomment the following lines to enable search query execution.
#iBASEDN="dc=syncloud,dc=org"
#SCOPE="base"
#FILTER="(&(objectClass=person)(memberOf=cn=some-group,ou=groups,dc=example,dc=com))"
# Space-separated list of additional LDAP attributes to query.
#dd You could process them in your own on_auth_success hook.
#ATTRS="cn"

# Uncomment to have the value of cn be set as user's friendly name in
# Home Assistant. This only works if you also enable searching (BASEDN,
# SCOPE and FILTER).
#NAME_ATTR="cn"
#ATTRS="$ATTRS $NAME_ATTR"


########## SCRIPT CODE FOLLOWS, DON'T TOUCH ##########

on_auth_success() {
	# print the meta entries for use in HA
	if [ ! -z "$NAME_ATTR" ]; then
		name=$(echo "$output" | sed -nr "s/^\s*$NAME_ATTR:\s*(.+)\s*\$/\1/Ip")
		[ -z "$name" ] || echo "name=$name"
	fi
}

